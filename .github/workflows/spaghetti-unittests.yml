 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 11 * * *'

 jobs:
   spaghetti-unittests:
     name: conda (${{ matrix.os }}, ${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     timeout-minutes: 90
     strategy:
       matrix:
         os: ['macos-latest', 'ubuntu-latest', 'windows-latest']
         environment-file: [ci/travis/36-latest-conda-forge-PYPI.yaml, ci/travis/36-latest-conda-forge-PYPI-PLUS.yaml, ci/travis/36-latest-conda-forge-GIT.yaml, ci/travis/36-latest-conda-forge-GIT-PLUS.yaml, ci/travis/37-latest-conda-forge-PYPI.yaml, ci/travis/37-latest-conda-forge-PYPI-PLUS.yaml, ci/travis/37-latest-conda-forge-GIT.yaml, ci/travis/37-latest-conda-forge-GIT-PLUS.yaml, ci/travis/38-latest-conda-forge-PYPI.yaml, ci/travis/38-latest-conda-forge-PYPI-PLUS.yaml, ci/travis/38-latest-conda-forge-GIT.yaml, ci/travis/38-latest-conda-forge-GIT-PLUS.yaml]
     steps:
       - uses: actions/checkout@v2
       - uses: goanpeca/setup-miniconda@v1
         with:
            miniconda-version: 'latest'
            auto-update-conda: true
            auto-activate-base: false
            environment-file: ${{ matrix.environment-file }}
            activate-environment: test
       - shell: bash -l {0}
         run: |
           conda info --all;
           conda list;
           py.test -v spaghetti --cov=spaghetti --doctest-modules --cov-config=.coveragerc --cov-report=xml;
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: spaghetti-codecov

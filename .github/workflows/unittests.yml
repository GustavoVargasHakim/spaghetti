 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'

 jobs:
   unittests:
     name: micromamba (${{ matrix.os }}, ${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     timeout-minutes: 30
     strategy:
       matrix:
         os: [macos-latest, ubuntu-latest, windows-latest]
         environment-file: [ci/36-PYPI.yaml, ci/36-PYPI-PLUS.yaml, ci/36-GIT.yaml, ci/36-GIT-PLUS.yaml, ci/37-PYPI.yaml,  ci/37-PYPI-PLUS.yaml, ci/37-GIT.yaml, ci/37-GIT-PLUS.yaml, ci/38-PYPI.yaml, ci/38-PYPI-PLUS.yaml,  ci/38-GIT.yaml, ci/38-GIT-PLUS.yaml, ci/39-PYPI.yaml, ci/39-PYPI-PLUS.yaml, ci/39-GIT.yaml,  ci/39-GIT-PLUS.yaml]
         exclude:
           - environment-file: ci/36-PYPI-PLUS.yaml
             os: windows-latest
           - environment-file: ci/36-GIT-PLUS.yaml
             os: windows-latest
     #defaults:
     #  run:
     #    shell: bash -l {0}
     steps:
       - name: checkout repo
         uses: actions/checkout@v2
       
       - name: setup micromamba
         uses: mamba-org/provision-with-micromamba@main
         with:
           environment-file: ${{ matrix.environment-file }}
         if: contains(matrix.environment-file, 'PYPI')
       
       - name: setup mamba
         uses: conda-incubator/setup-miniconda@v2
         with:
           miniconda-version: 'latest'
           mamba-version: '*'
           use-mamba: true
           channels: conda-forge
           channel-priority: strict
           auto-update-conda: false
           auto-activate-base: false
           environment-file: ${{ matrix.environment-file }}
           activate-environment: test
         if: contains(matrix.environment-file, 'GIT')
       
       - name: run tests in bash
         shell: bash -l {0}
         run: pytest -v spaghetti --cov=spaghetti --doctest-modules --cov-config=.coveragerc --cov-report=xml
         if: [[ (matrix.os != 'windows-latest' && contains(matrix.environment-file, 'PYPI')) || (contains(matrix.environment-file, 'GIT')) ]]
       
       - name: run tests in powershell
         shell: powershell
         run: pytest -v spaghetti --cov=spaghetti --doctest-modules --cov-config=.coveragerc --cov-report=xml
         if: matrix.os == 'windows-latest' && contains(matrix.environment-file, 'PYPI')
       
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: spaghetti-codecov


 
#if: matrix.os != 'windows-latest' && contains(matrix.environment-file, 'PYPI')
 
 
# jobs:
#   unittests:
#     name: micromamba
#     runs-on: ubuntu-latest
#     timeout-minutes: 30
#     defaults:
#       run:
#         shell: bash -l {0}
#     steps:
#       - uses: actions/checkout@v2
#       - name: install mambda
#         uses: mamba-org/provision-with-micromamba@main
#         with:
#           environment-file: ci/39-PYPI.yaml
#       #- run: mamba info --all
#       #- run: mamba list
#       - name: run tests
#         run: pytest -v spaghetti --cov=spaghetti --doctest-modules --cov-config=.coveragerc --cov-report=xml
#       - name: codecov
#         uses: codecov/codecov-action@v1
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           file: ./coverage.xml
#           name: spaghetti-codecov


#jobs:
#  unittests:
#    name: conda (${{ matrix.os }}, ${{ matrix.environment-file }})
#    runs-on: ${{ matrix.os }}
#    timeout-minutes: 30
#    strategy:
#      matrix:
#        os: [macos-latest, ubuntu-latest, windows-latest]
#        environment-file: [ci/36-PYPI.yaml, ci/36-PYPI-PLUS.yaml, ci/36-GIT.yaml, ci/36-GIT-PLUS.yaml, ci/37-PYPI.yaml, ci/37-PYPI-PLUS.yaml, ci/37-GIT.yaml, ci/37-GIT-PLUS.yaml, ci/38-PYPI.yaml, ci/38-PYPI-PLUS.yaml, ci/38-GIT.yaml, ci/38-GIT-PLUS.yaml, ci/39-PYPI.yaml, ci/39-PYPI-PLUS.yaml, ci/39-GIT.yaml, ci/39-GIT-PLUS.yaml]
#        exclude:
#          - environment-file: ci/36-PYPI-PLUS.yaml
#            os: windows-latest
#          - environment-file: ci/36-GIT-PLUS.yaml
#            os: windows-latest
#    defaults:
#      run:
#        shell: bash -l {0}
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        env:
#          CACHE_NUMBER: 0
#        with:
#          path: ~/conda_pkgs_dir
#          key: ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles(matrix.environment-file) }}
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#           miniconda-version: 'latest'
#           channels: conda-forge
#           channel-priority: strict
#           auto-update-conda: false
#           auto-activate-base: false
#           environment-file: ${{ matrix.environment-file }}
#            activate-environment: test
#            use-only-tar-bz2: true
#       - run: conda info --all
#       - run: conda list
#       - run: conda config --show-sources
#       - run: conda config --show
#       - run: pytest -v spaghetti --cov=spaghetti --doctest-modules --cov-config=.coveragerc --cov-report=xml
#       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
#         uses: codecov/codecov-action@v1
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           file: ./coverage.xml
#           name: spaghetti-codecov
